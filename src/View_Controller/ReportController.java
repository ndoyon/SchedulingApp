package View_Controller;

import Util.DBConnection;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.input.MouseEvent;
import javafx.stage.Stage;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Collections;




/** This class is for the reporter controller. */
public class ReportController {


    @FXML
    private Button exitBtn;


    @FXML
    private TextArea customerScheduleTA;
    @FXML
    private TextArea totalCountTA;
    @FXML
    private TextArea contactTextArea;




    /** This method changes the scene back to the main screen.
     * @param event mouse click changes scene.
     * */
    @FXML
    void exitBtnClick(MouseEvent event) throws IOException {
        Stage stage = (Stage) ((Button) event.getSource()).getScene().getWindow();
        Object scene = FXMLLoader.load(getClass().getResource("/View_Controller/MainScreen.fxml"));
        stage.setScene(new Scene((Parent) scene));
        stage.show();
    }


    /** This method generates appointments by month and type.
     * When clicked the appointments will be generated by month and type and siplayed in the text area.
     * @param event mouseclick event
     * */
    public void generateApptsByMonth(MouseEvent event) {

        try {
            Statement statement = DBConnection.conn.createStatement();
            String query = "SELECT MONTHNAME(`start`) AS \"Month\", type AS \"Type\", COUNT(*) as \"Amount\" "
                    + "FROM appointments "
                    + "GROUP BY MONTHNAME(`start`), type";
            ResultSet rs = statement.executeQuery(query);
            StringBuilder typeMonthText = new StringBuilder();
            typeMonthText.append(String.format("%1$-27s %2$-27s %3$-30s \n",
                    "Month", "Type", "Amount"));
            typeMonthText.append(String.join("", Collections.nCopies(50, "-")));
            typeMonthText.append("\n");
            while (rs.next()) {
                typeMonthText.append(String.format("%1$-25s %2$-25s %3$-25s \n",
                        rs.getString("Month"),
                        rs.getString("Type"),
                        rs.getString("Amount")));
            }
            statement.close();
            totalCountTA.setText(typeMonthText.toString());
        } catch (SQLException e) {
            System.out.println("SQLException: " + e.getMessage());
        }
    }




    /** This method generates appointments by customer and location.
     * When clicked customer and location will display in text area and count.
     * @param event mouseclick event
     * */
    public void generateApptsByCustomer(MouseEvent event) {

        try {
            Statement statement = DBConnection.conn.createStatement();
            String query = "SELECT Customer_ID AS \"Customer\", location AS \"Location\", COUNT(*) as \"Amount\" "
                    + "FROM appointments "
                    + "GROUP BY Customer_ID, location";
            ResultSet rs = statement.executeQuery(query);
            StringBuilder custLocationText = new StringBuilder();
            custLocationText.append(String.format("%1$-27s %2$-27s %3$-30s \n",
                    "Customer ID", "Location", "Amount"));
            custLocationText.append(String.join("", Collections.nCopies(50, "-")));
            custLocationText.append("\n");
            while (rs.next()) {
                custLocationText.append(String.format("%1$-25s %2$-25s %3$-25s \n",
                        rs.getString("Customer"),
                        rs.getString("Location"),
                        rs.getString("Amount")));
            }
            statement.close();
            customerScheduleTA.setText(custLocationText.toString());
        } catch (SQLException e) {
            System.out.println("SQLException: " + e.getMessage());
        }
    }




    /** This method generates appointments by Contact.
     * When clicked the appoints by contact will display information in text area.
     * @param event mouseclick event
     * */
    @FXML
    void generateApptsByContact(MouseEvent event) {
        try {
            Statement statement = DBConnection.conn.createStatement();
            String query = "SELECT Contact_ID AS \"Contact_ID\", title AS \"Title\", type AS \"Type\", description AS \"Description\", start AS \"start\", end AS \" end\", Customer_ID AS \"Customer_ID\", Appointment_ID AS \"Appointment_ID\" "
                    + "FROM appointments "
                    + "ORDER BY Contact_ID ASC";
            ResultSet rs = statement.executeQuery(query);
            StringBuilder custLocationText = new StringBuilder();
            custLocationText.append(String.format("%1$-27s %2$-27s %3$-27s %4$-37s %5$-45s %6$-50s %7$-25s %8$-25s  \n",
                    "Contact_ID", "Title", "Type", "Description", "Start", "End", "Customer_ID", "Appointment_ID"));
            custLocationText.append(String.join("", Collections.nCopies(175, "-")));
            custLocationText.append("\n");
            while (rs.next()) {
                custLocationText.append(String.format("%1$-35s %2$-28s %3$-28s %4$-28s %5$-28s %6$-45s %7$-25s %7$-25s \n",
                        rs.getString("Contact_ID"),
                        rs.getString("Title"),
                        rs.getString("Type"),
                        rs.getString("Description"),
                        rs.getTimestamp("start").toLocalDateTime(),
                        rs.getTimestamp("end").toLocalDateTime(),
                        rs.getString("Customer_ID"),
                        rs.getString("Appointment_ID")));
            }
            statement.close();
            contactTextArea.setText(custLocationText.toString());
        } catch (SQLException e) {
            System.out.println("SQLException: " + e.getMessage());
        }
    }
}


